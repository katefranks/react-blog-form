{"version":3,"sources":["components/BlogForm.js","components/App.js","reportWebVitals.js","index.js"],"names":["BlogForm","props","state","title","body","handleInput","bind","handleSubmit","event","this","setState","target","name","value","preventDefault","addBlog","onSubmit","type","placeholder","onChange","Component","App","blogs","counter","id","blog","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAsCeA,E,kDAnCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,GACPC,KAAM,IAER,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPH,E,+CASnB,SAAYE,GACVC,KAAKC,SAAL,eAAiBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,U,0BAEpD,SAAaL,GACXA,EAAMM,iBACNL,KAAKR,MAAMc,QAAQ,CACjBZ,MAAOM,KAAKP,MAAMC,MAClBC,KAAMK,KAAKP,MAAME,OAGnBK,KAAKC,SAAS,CAAEP,MAAO,GAAIC,KAAM,O,oBAGnC,WACE,OACE,uBAAMY,SAAUP,KAAKF,aAArB,UACE,uBAAOU,KAAK,OAAOL,KAAK,QAAQM,YAAY,mBAAmBL,MAAOJ,KAAKP,MAAMC,MAAOgB,SAAUV,KAAKJ,cACvG,uBACA,uBAAOY,KAAK,OAAOL,KAAK,OAAOM,YAAY,qBAAqBL,MAAOJ,KAAKP,MAAME,KAAMe,SAAUV,KAAKJ,cACvG,uBACA,wBAAQY,KAAK,SAAb,6B,GA9BeG,aCwCRC,E,kDApCb,WAAYpB,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXoB,MAAO,GACPC,QAAS,GAEX,EAAKR,QAAU,EAAKA,QAAQT,KAAb,gBANC,E,qDAQlB,WAQAG,KAAKC,SAAS,CAAEY,MAPA,CACd,CACEE,GAAI,EACJrB,MAAO,eACPC,KAAM,sF,qBAKV,SAASqB,GACPA,EAAKD,GAAKf,KAAKP,MAAMqB,QACrB,IAAMD,EAAK,YAAQb,KAAKP,MAAMoB,OAC9BA,EAAMI,KAAKD,GACXhB,KAAKC,UAAS,SAACR,GAAD,MAAY,CAAEoB,QAAOC,QAASrB,EAAMqB,QAAU,Q,oBAE9D,WACE,OACE,gCACE,2CACA,cAAC,EAAD,CAAUR,QAASN,KAAKM,iB,GA9BdK,aCQHO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c2342a8c.chunk.js","sourcesContent":["import { Component } from 'react';\n\nclass BlogForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      body: '',\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n  handleSubmit(event){\n    event.preventDefault();\n    this.props.addBlog({\n      title: this.state.title,\n      body: this.state.body,\n    });\n\n    this.setState({ title: '', body: '' });\n  }\n\n  render(){\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input type=\"text\" name=\"title\" placeholder=\"Enter Blog Title\" value={this.state.title} onChange={this.handleInput}  />\n        <br/>\n        <input type=\"text\" name=\"body\" placeholder=\"Write Content Here\" value={this.state.body} onChange={this.handleInput}  />\n        <br/>\n        <button type=\"submit\">Add Blog</button>\n      </form>\n    )\n  }\n}\n\nexport default BlogForm;\n","import { Component} from 'react';\nimport './App.css';\nimport BlogForm from './BlogForm';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      blogs: [],\n      counter: 2,\n    }\n    this.addBlog = this.addBlog.bind(this);\n  }\n  componentDidMount(){\n    const blogs = [\n    {\n      id: 1,\n      title: 'I Love Bikes',\n      body: 'In this blog post, I will tell you about my love for all things bike related!',\n    }\n  ];\n  this.setState({ blogs });\n  }\n  addBlog( blog ){\n    blog.id = this.state.counter;\n    const blogs = [ ...this.state.blogs ];\n    blogs.push(blog);\n    this.setState((state) => ({ blogs, counter: state.counter + 1 }));\n  }\n  render(){\n    return (\n      <div>\n        <h1>Blog Form</h1>\n        <BlogForm addBlog={this.addBlog} />\n        {/* <BlogList blogs={this.state.blogs}\n        /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}